#include <iostream>
#include <vector>
#include <queue>

using namespace std;

struct Node {
    int data;
    Node* left;
    Node* right;
};

Node* newNode(int data) {
    Node* node = new Node();
    node->data = data;
    node->left = node->right = nullptr;
    return node;
}

void levelOrder(Node* root, int level, vector<int>& levels) {
    if (root == nullptr) return;

    if (level >= levels.size()) {
        levels.resize(level + 1);
    }

    levels[level] = root->data;

    levelOrder(root->left, level + 1, levels);
    levelOrder(root->right, level + 1, levels);
}

vector<int> levelOfNodes(Node* root) {
    vector<int> levels;
    levelOrder(root, 0, levels);
    return levels;
}

int main() {
    Node* root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);
    root->left->left = newNode(4);
    root->left->right = newNode(5);
    root->right->left = newNode(6);
    root->right->right = newNode(7);

    vector<int> levels = levelOfNodes(root);

    for (int i = 0; i < levels.size(); i++) {
        cout << "Level " << i << ": ";
        for (int j = 0; j < levels.size(); j++) {
            if (j >= levels.size() - i - 1) {
                cout << levels[j] << " ";
            }
        }
        cout << endl;
    }

    return 0;
}